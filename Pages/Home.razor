@* @page "/"
@using HR.Management.Client.Services
@using Models
@using Services
@inject EmployeeService EmployeeService
@inject DepartmentService DepartmentService
@inject LeaveRequestService LeaveRequestService
@using Blazorise.Charts
@inject IJSRuntime JS

<BlazorAnimate.Animate Animation="Animations.ZoomIn" Duration="TimeSpan.FromSeconds(0.5)" Delay="TimeSpan.FromSeconds(1)">

<PageTitle>Home</PageTitle>

<Layout>
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <Card>
                    <CardHeader>
                        <h4>Total Employees</h4>
                    </CardHeader>
                    <CardBody>
                        <h1>@totalEmployees</h1>
                    </CardBody>
                </Card>
            </div>

            <div class="col-md-6">
                <Card>
                    <CardHeader>
                        <h4>Total Departments</h4>
                    </CardHeader>
                    <CardBody>
                        <h1>@totalDepartments</h1>
                    </CardBody>
                </Card>
            </div>

            <div class="col-md-6">
                <Card>
                    <CardHeader>
                        <h4>Pending Leave Requests</h4>
                    </CardHeader>
                    <CardBody>
                        <h1>@pendingLeaveRequests</h1>
                    </CardBody>
                </Card>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-12">
                <Card>
                    <CardHeader>
                        <h4>Leave Requests Overview</h4>
                    </CardHeader>
                    <CardBody>
                        @if (leaveRequestChartData != null)
                        {
                            <Chart Type="ChartType.Line" Data="@leaveRequestChartData" />
                        }
                        else
                        {
                            <p>Loading chart data...</p>
                        }
                    </CardBody>
                </Card>
            </div>
        </div>
    </div>
</Layout>

</BlazorAnimate.Animate>

@code {
    private int totalEmployees;
    private int totalDepartments;
    private int pendingLeaveRequests;
    private ChartData<LineChartDataset<int>>? leaveRequestChartData;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            totalEmployees = await EmployeeService.GetEmployeeCountAsync();
            totalDepartments = await DepartmentService.GetDepartmentCountAsync();
            
            var leaveRequests = await LeaveRequestService.GetAllLeaveRequestsAsync();
            pendingLeaveRequests = leaveRequests.Count(lr => lr.Status == "Pending");

            await LoadLeaveRequestChartData(leaveRequests);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private async Task LoadLeaveRequestChartData(List<LeaveRequest> leaveRequests)
    {
        var monthlyLeaveRequests = Enumerable.Range(1, 12)
            .ToDictionary(month => month, month => 0);

        foreach (var leaveRequest in leaveRequests)
        {
            var month = leaveRequest.StartDate.Month;
            if (monthlyLeaveRequests.ContainsKey(month))
            {
                monthlyLeaveRequests[month]++;
            }
        }

var leaveRequestChartData = new ChartData<int>
{
    Labels = Enumerable.Range(1, 12)
        .Select(month => new DateTime(1, month, 1).ToString("MMM"))
        .Cast<object>() // Ensure correct type for Labels
        .ToList(),
    Datasets = new List<ChartDataset<int>> // Use ChartDataset<int> as the type
    {
        new LineChartDataset<int>
        {
            Label = "Leave Requests",
            Data = monthlyLeaveRequests.Values.ToList(),
            BackgroundColor = "rgba(0, 123, 255, 0.5)",
            BorderColor = "rgba(0, 123, 255, 1)",
            BorderWidth = 2
        } as ChartDataset<int> // Cast LineChartDataset<int> to ChartDataset<int>
    }
};





        await JS.InvokeVoidAsync("console.log", "Chart data loaded"); 
        StateHasChanged();
    }
} *@
